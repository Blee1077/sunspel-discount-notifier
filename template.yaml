AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sunspel-dicount-notifier

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 600
    MemorySize: 500
    Handler: app.lambda_handler
    Runtime: python3.9
    Architectures:
      - x86_64

Parameters:
  SNSEmailParameter:
    Type: String
    Description: Enter email address for execution failure SNS topic subscription.

Resources:
  SunspelDiscountNotifierFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: sunspel_discount_notifier/
      Policies:
        - S3ReadPolicy:
            BucketName: "crypto-indicator-alert"
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: cron(0 8 * * ? *)
            Name: SunspelDiscountNotifierSchedule
            Description: Sends an email to me when Sunspel has discounts on their Riviera polo shirts.
            Enabled: true
            Input: '{"min_discount_perc": 25, "email_secret_bucket": "crypto-indicator-alert", "email_secret_json_key": "outlook-email-secret.json"}'

  SunspelDiscountErrorTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref SNSEmailParameter
        Protocol: email
  
  ExecutionFailureAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      ActionsEnabled: true
      AlarmDescription: 'Sends an alarm when the sunspel discount notifier lambda function fails.'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
         - Name: FunctionName
           Value: !Ref SunspelDiscountNotifierFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 21600
      Threshold: 1
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SunspelDiscountErrorTopic

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SunspelDiscountNotifierFunction:
    Description: "Sunspel Discount Notifier Function ARN"
    Value: !GetAtt SunspelDiscountNotifierFunction.Arn
  SunspelDiscountNotifierIamRole:
    Description: "Implicit IAM Role created for Sunspel Discount Notifier function"
    Value: !GetAtt SunspelDiscountNotifierFunctionRole.Arn
