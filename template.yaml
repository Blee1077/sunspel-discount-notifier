AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sunspel-dicount-notifier

Parameters:
  EmailSecretBucket:
    Type: String
    Description: S3 bucket that contains email secrets
    NoEcho: true
  EmailSecretJsonKey:
    Type: String
    Description: JSON file that contains email secrets (structure defined in README)
    NoEcho: true
  SNSEmailParameter:
    Type: String
    Description: Enter email address for execution failure SNS topic subscription.
  Schedule:
    Type: String
    Description: Cron schedule for function invocation
    Default: cron(0 8 * * ? *)
  FunctionTimeout:
    Type: Number
    Description: Lambda function timeout
    Default: 600
  FunctionMemorySize:
    Type: Number
    Description: Lambda function memory size
    Default: 275
  MinDiscountPerc:
    Type: Number
    Description: Minimum discount percentage to send an email
    Default: 50

Globals:
  Function:
    Timeout: !Ref FunctionTimeout
    MemorySize: !Ref FunctionMemorySize
    Handler: app.lambda_handler
    Runtime: python3.9
    Architectures:
      - x86_64
    Environment:
      Variables:
        MIN_DISCOUNT_PERC: !Ref MinDiscountPerc
        EMAIL_SECRET_BUCKET: !Ref EmailSecretBucket 
        EMAIL_SECRET_JSON_KEY: !Ref EmailSecretJsonKey 

Resources:
  SunspelDiscountNotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sunspel_discount_notifier/
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref EmailSecretBucket
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: !Ref Schedule
            Name: SunspelDiscountNotifierSchedule
            Description: Sends an email to me when Sunspel has discounts on their Riviera polo shirts.
            Enabled: true

  SunspelDiscountErrorTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref SNSEmailParameter
        Protocol: email
  
  ExecutionFailureAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      ActionsEnabled: true
      AlarmDescription: 'Sends an alarm when the sunspel discount notifier lambda function fails.'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
         - Name: FunctionName
           Value: !Ref SunspelDiscountNotifierFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 21600
      Threshold: 1
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SunspelDiscountErrorTopic

Outputs:
  # InvocationLevel is an implicit Schedule event rule created out of Events key under Serverless::Function
  SunspelDiscountNotifierFunction:
    Description: "Sunspel Discount Notifier Function ARN"
    Value: !GetAtt SunspelDiscountNotifierFunction.Arn
  SunspelDiscountNotifierIamRole:
    Description: "Implicit IAM Role created for Sunspel Discount Notifier function"
    Value: !GetAtt SunspelDiscountNotifierFunctionRole.Arn
